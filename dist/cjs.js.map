{
  "version": 3,
  "sources": ["../src/index.ts"],
  "sourcesContent": ["/**\n * Simple function check.\n *\n * @see https://stackoverflow.com/questions/5999998/how-can-i-check-if-a-javascript-variable-is-function-type\n * @param {any} fn\n * @returns {boolean}\n */\nfunction isFunction(fn: Function): boolean {\n    return !!(fn && typeof fn === 'function');\n}\n\nfunction isString(str: String): boolean {\n    return typeof str === 'string';\n}\n\n/**\n * Check is DOM Element\n * https://stackoverflow.com/questions/9979172/difference-between-node-object-and-element-object\n *\n * @param {any} el elementToCheck\n * @returns {boolean}\n */\nfunction isElement(el: HTMLElement): boolean {\n    return !!(typeof HTMLElement === 'object' ? el instanceof HTMLElement : el && typeof el === 'object' && el !== null && el.nodeType === 1 && typeof el.nodeName === 'string');\n}\n\n\ninterface DelegateEvent extends Event {\n    delegateTarget: Element,\n    once: boolean\n}\n/**\n * Bind given callback onto existing and upcoming elements matching the given\n * selector, for events of type eType.\n * Use e.delegateTarget instead of e.target in the callback function to get the HTMLElement representative of selector\n *\n * @param {HTMLElement} $container HTMLElement into which to apply Selector\n * @param {String} selector Selector matching HTMLElements onto which the callback will be bind\n * @param {String} eType String event or list of events seperated by , (ex: 'touchstart,touchmove,touchend')\n * @param {Function} callback Function to execute when catching the event\n * @param {boolean} useCapture Boolean that dertemine if the event must use capture or not (default: false)\n * @param {boolean} once Boolean that dertemine if the event must trigger only once\n * @returns {{delegate: Function, undelegate: Function}|void}\n */\nfunction delegate($container: HTMLElement, selector: string, eType: String, callback: Function, useCapture = false, once = false): {delegate: Function, undelegate: Function} | void {\n    if (!isElement($container) || !isString(selector) || !isString(eType) || !isFunction(callback)) {\n        console.error('Delegate Event', 'invalid parameter', $container, selector, eType, callback);\n        return;\n    }\n\n    function switchEvent($container, eventList, eventHandler, useCapture, remove) {\n        eventList.split(',').forEach(event => {\n            $container[`${remove ? 'remove' : 'add'}EventListener`](event.trim(), eventHandler, useCapture);\n        });\n    }\n\n    function eventHandler(e: DelegateEvent) {\n        // get target element\n        const eventTarget: Element = e.target as Element;\n        const currentTarget = e.currentTarget as Element;\n        const target = eventTarget.matches(selector) ? e.target : eventTarget.closest(selector);\n\n        // prevent to access element outside of parent\n        if (eventTarget && currentTarget.contains(eventTarget)) {\n            e.delegateTarget = eventTarget;\n            callback.call($container, e);\n            e.once = once;\n\n            // Use event once and remove event handler\n            if (once) {\n                undelegate(); // eslint-disable-line no-use-before-define\n            }\n        }\n    }\n\n    function delegate() {\n        switchEvent($container, eType, eventHandler, useCapture, false);\n    }\n\n    function undelegate() {\n        switchEvent($container, eType, eventHandler, useCapture, true);\n    }\n\n    delegate();\n\n    return {\n        delegate,\n        undelegate\n    };\n}\n\nexport { delegate\u00A0};\n"],
  "mappings": "4ZAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,cAAAE,IAAA,eAAAC,EAAAH,GAOA,SAASI,EAAWC,EAAuB,CACvC,MAAO,CAAC,EAAEA,GAAM,OAAOA,GAAO,WAClC,CAEA,SAASC,EAASC,EAAsB,CACpC,OAAO,OAAOA,GAAQ,QAC1B,CASA,SAASC,EAAUC,EAA0B,CACzC,MAAO,CAAC,EAAE,OAAO,aAAgB,SAAWA,aAAc,YAAcA,GAAM,OAAOA,GAAO,UAAYA,IAAO,MAAQA,EAAG,WAAa,GAAK,OAAOA,EAAG,UAAa,SACvK,CAoBA,SAASP,EAASQ,EAAyBC,EAAkBC,EAAeC,EAAoBC,EAAa,GAAOC,EAAO,GAA0D,CACjL,GAAI,CAACP,EAAUE,CAAU,GAAK,CAACJ,EAASK,CAAQ,GAAK,CAACL,EAASM,CAAK,GAAK,CAACR,EAAWS,CAAQ,EAAG,CAC5F,QAAQ,MAAM,iBAAkB,oBAAqBH,EAAYC,EAAUC,EAAOC,CAAQ,EAC1F,MACJ,CAEA,SAASG,EAAYN,EAAYO,EAAWC,EAAcJ,EAAYK,EAAQ,CAC1EF,EAAU,MAAM,GAAG,EAAE,QAAQG,GAAS,CAClCV,EAAW,GAAGS,EAAS,SAAW,KAAK,eAAe,EAAEC,EAAM,KAAK,EAAGF,EAAcJ,CAAU,CAClG,CAAC,CACL,CAEA,SAASI,EAAaG,EAAkB,CAEpC,IAAMC,EAAuBD,EAAE,OACzBE,EAAgBF,EAAE,cAClBG,EAASF,EAAY,QAAQX,CAAQ,EAAIU,EAAE,OAASC,EAAY,QAAQX,CAAQ,EAGlFW,GAAeC,EAAc,SAASD,CAAW,IACjDD,EAAE,eAAiBC,EACnBT,EAAS,KAAKH,EAAYW,CAAC,EAC3BA,EAAE,KAAON,EAGLA,GACAU,EAAW,EAGvB,CAEA,SAASvB,GAAW,CAChBc,EAAYN,EAAYE,EAAOM,EAAcJ,EAAY,EAAK,CAClE,CAEA,SAASW,GAAa,CAClBT,EAAYN,EAAYE,EAAOM,EAAcJ,EAAY,EAAI,CACjE,CAEA,OAAAZ,EAAS,EAEF,CACH,SAAAA,EACA,WAAAuB,CACJ,CACJ",
  "names": ["src_exports", "__export", "delegate", "__toCommonJS", "isFunction", "fn", "isString", "str", "isElement", "el", "$container", "selector", "eType", "callback", "useCapture", "once", "switchEvent", "eventList", "eventHandler", "remove", "event", "e", "eventTarget", "currentTarget", "target", "undelegate"]
}
